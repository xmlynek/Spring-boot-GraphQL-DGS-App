type Customer @connection {
    uuid                : String!
    fullName            : String!
    birthDate           : Date!
    phone               : String!
    email               : String!
    salesOrders         : [SalesOrder!]
    addresses           : [Address!]
    documents           : [Document!]
}

input CustomerCreateRequest {
    fullName    : String! @NotBlank @Pattern(regexp: "^[A-Za-z ]{5,50}$")
    birthDate   : Date!
    phone       : String! @Pattern(regexp: "^[0-9]{5,15}$")
    email       : String! @Pattern(regexp: "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$")
    addresses   : [AddressCreateRequest!]
}

"""
Used to find user. Fill one of these, not both.
"""
input CustomerUniqueInput {
    uuid    : String @Pattern(regexp: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$")
    email   : String @Pattern(regexp: "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$")
}

type CustomerMutationResponse implements MutationResponse {
    customerUuid    : String
    message         : String
    success         : Boolean!
}

type CustomerPagination {
    customerConnection: CustomerConnection
    page: Int!
    size: Int!
    totalPages: Int!
    totalElement: Long!
}

input CustomerUpdateRequest {
    email: String @Pattern(regexp: "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$")
    phone: String @Pattern(regexp: "^[0-9]{5,15}$")
}